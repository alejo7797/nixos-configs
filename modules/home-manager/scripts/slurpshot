#
# Simple screenshot script, dependencies: grim, bemenu, gwenview, jq, slurp.
# Choose directory to save screenshots and viewer.
#

SHOTPATH=$HOME
VIEWER=/usr/bin/gwenview

WINDOWS=$(swaymsg -t get_tree | jq '.. | (.nodes? // empty)[] | select(.visible
and .pid) | "\(.app_id) \(.rect.x),\(.rect.y) \(.rect.width)x\(.rect.height)"')
DISPLAYS=$(swaymsg -t get_tree | jq '.. | (.nodes? // empty)[] | select(.type=="output" and .rect.width==1920) | "\(.name) \(.rect.x),\(.rect.y) \(.rect.width)x\(.rect.height)"')
FOCUSED=$(swaymsg -t get_tree | jq '.. | (.nodes? // empty)[] | select(.focused and .pid) | .rect | "\(.x),\(.y) \(.width)x\(.height)"')

CHOICE=$(
    bemenu -p "Please select screenshot area:" <<EOF
Selection
$DISPLAYS
$WINDOWS
EOF
)

if [ $? = 1 ]; then exit 0; fi

FILENAME="${SHOTPATH}/screenshot-$(date +'%Y-%m-%dT%H:%M:%S').png"
GRID=\"$(echo "$CHOICE" | awk ' {print $2,$3} ')

# Name printed when viewing screenshot, adjust if you edit FILENAME
FILENAME_SHORT=${FILENAME: -32}

# We lose focus when using bemenu, this helps with that
sleep 0.2

if [ "$CHOICE" = Selection ]; then
    grim -g "$(slurp)" "$FILENAME"
elif [ "$CHOICE" = Focus ]; then
    grim -g "$(eval echo "$FOCUSED")" "$FILENAME"
else
    grim -g "$(eval echo "$GRID")" "$FILENAME"
fi

WAHL=$(
    bemenu -p "Screenshot taken" <<EOF
View
Copy
Save
Discard
EOF
)

if [ $? = 1 ]; then
    rm "$FILENAME" &
    exit 0
fi

if [ "$WAHL" = View ]; then
    $VIEWER "$FILENAME" &
    WAHL2=$(
        bemenu -p "${FILENAME_SHORT}" <<EOF
Save
Copy
Discard
EOF
    )
    if [ $? = 1 ]; then
        rm "$FILENAME" &
        PID_VIEWER=$(pidof -s ${VIEWER})
        kill -9 "${PID_VIEWER}"
        exit 0
    fi
    if [ "$WAHL2" = Discard ]; then
        rm "$FILENAME" &
        PID_VIEWER=$(pidof -s ${VIEWER})
        kill -9 "${PID_VIEWER}"
    elif [ "$WAHL2" = Copy ]; then
        wl-copy <"$FILENAME" &
        rm "$FILENAME" &
        PID_VIEWER=$(pidof -s ${VIEWER})
        kill -9 "${PID_VIEWER}"
    else
        PID_VIEWER=$(pidof -s ${VIEWER})
        kill -9 "${PID_VIEWER}"
        true
    fi
elif [ "$WAHL" = Discard ]; then
    rm "$FILENAME"
elif [ "$WAHL" = Copy ]; then
    wl-copy <"$FILENAME" &
    rm "$FILENAME"
else
    true
fi
exit 0
